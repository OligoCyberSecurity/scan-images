name: "Scan Docker Images"
description: "Scans multiple docker images based on a search pattern using the Trivy image scanner"
author: "Craig Bath"
branding:
  icon: "alert-circle"
  color: "purple"
inputs:
  image_grep:
    description: "Image grep pattern"
    required: true

  severities:
    description: "Comma separated list of severities to check for ('CRITICAL,HIGH,MEDIUM,LOW')"
    required: false
    default: 'HIGH,CRITICAL'

  upload_reports:
    description: "Upload HTML reports for download"
    required: false
    default: 'true'

  exit_on_error:
    description: "Return non-zero exit code if any issues found"
    required: false
    default: 'true'

outputs:
  issues:
    description: "Total Number of Issues Found"
    value: ${{ steps.scan.outputs.issues }}

runs:
  using: "composite"
  steps:
    - name: 🦜 Checkout Scripts
      uses: actions/checkout@v3
      with:
        repository: 'spicyparrot/scan-images'
        path: temp_scanning

    - name: 👩‍💻 Install Trivy
      shell: bash
      run: |
        sudo apt-get install wget apt-transport-https gnupg lsb-release
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | sudo tee /usr/share/keyrings/trivy.gpg > /dev/null
        echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update
        sudo apt-get install trivy

    - name: ☢ Scan Images
      id: scan
      shell: bash
      working-directory: temp_scanning
      run: |
        ./scan.sh "${{ inputs.image_grep }}" "${{ inputs.severities }}"
        
    - name: ⬆ Upload Reports
      uses: actions/upload-artifact@v3.1.1
      if: ${{ inputs.upload_reports }} == 'true'
      with:
        name: Trivy Reports - ${{ inputs.image_grep }}
        path: /tmp/trivy_image_reports.html

    - name: ⚠ Add Warning Annotations
      if: steps.scan.outputs.issues > 0
      uses: actions/github-script@v6.3.3
      with:
        script: core.setWarning('${{ steps.scan.outputs.issues }} issues found')

    - name: 📑 Check Total Issues
      if: (steps.scan.outputs.issues > 0) && (inputs.exit_on_error == 'true')
      uses: actions/github-script@v6.3.3
      with:
        script: core.setFailed('${{ steps.scan.outputs.issues }} issues found')