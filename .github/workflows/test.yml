name: 🧪 Test
on: 
  workflow_dispatch:
  workflow_call:

env:
  GREEN: '\033[0;32m'
  RED: '\033[0;31m'

jobs:
  python:
    name: 🐍 Python Images
    runs-on: ubuntu-latest
    outputs:
      issues: ${{ steps.scan.outputs.issues }}
    steps:     
      - name: ⏬ Download Test Images
        run: |
          docker pull python:3.4-alpine
          docker pull python:3.8.10-slim
          docker pull python:3.8.10

      - name: ☢ Scan Images
        id: scan
        uses: spicyparrot/scan-images@trunk
        with:
          image_grep: "python"
          severities: "CRITICAL"
          exit_on_error: false
      
  custom:
    name: 🦜 Custom Images
    runs-on: ubuntu-latest
    outputs:
      issues: ${{ steps.scan.outputs.issues }}
    steps:
      - name: 🛀 Checkout Self
        uses: actions/checkout@v3

      - name: 🏗 Build Custom Images
        run: |
          cd test/node/
          docker-compose build

      - name: ☢ Scan Images
        id: scan
        uses: spicyparrot/scan-images@trunk
        with:
          image_grep: "spicyparrot"
          severities: "CRITICAL"

  none:
    name: 🍌 No Matching Images
    runs-on: ubuntu-latest
    outputs:
      issues: ${{ steps.scan.outputs.issues }}
    steps:     
      - name: ☢ Scan Images
        id: scan
        uses: spicyparrot/scan-images@trunk
        with:
          image_grep: "bananaramallamadrama"
          severities: "CRITICAL"

  review:
    name: 🔍 Check Results
    runs-on: ubuntu-latest
    needs: [python, custom, none]
    steps:
      - name: ✅ Check Outputs
        run: |
          echo "Python Image Issues - ${{ needs.python.outputs.issues }}" >> $GITHUB_STEP_SUMMARY
          echo "Custom Image Issues -  ${{ needs.custom.outputs.issues }}" >> $GITHUB_STEP_SUMMARY
          echo "Empty Match Issues -  ${{ needs.none.outputs.issues }}" >> $GITHUB_STEP_SUMMARY

      - name: 🎌 Ensure Issues Found
        if: (needs.python.outputs.issues < 1) || (needs.none.outputs.issues > 0)
        uses: actions/github-script@v6.3.3
        with:
          script: core.setFailed('${{ steps.scan.outputs.issues }} issues found')

      - name: 🙌 Pass Unit Test
        run: |
          printf "${GREEN}Tests have passed! ✅"

      # Enable tmate debugging of manually-triggered workflows if the input option was provided
      #- name: Setup tmate session
      #  if: always()
      #  uses: mxschmitt/action-tmate@v3     #https://github.com/marketplace/actions/debugging-with-tmate  + https://blog.fleetdm.com/4-tips-for-github-actions-usability-2-debugging-4c0c920adfde
      #  timeout-minutes: 15     